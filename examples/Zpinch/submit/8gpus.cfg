# Copyright 2013-2017 Axel Huebl
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                      doc/TBG_macros.cfg
##


#################################
## Section: Required Variables ##
#################################

TBG_wallTime="12:00:00"

TBG_gpu_x=2
TBG_gpu_y=2
TBG_gpu_z=2

TBG_gridSize="-g 320 640 640"
TBG_steps="-s 100000"
TBG_period="--periodic 1 1 1"

#################################
## Section: Optional Variables ##
#################################

# Create a particle-energy histogram [in keV] for e- species every 100 steps
TBG_eth_histogram="--e_energyHistogram.period 1000 --e_energyHistogram.binCount 1024       \
                   --e_energyHistogram.minEnergy 0 --e_energyHistogram.maxEnergy 5"
TBG_ehot_histogram="--Ar_energyHistogram.period 1000 --Ar_energyHistogram.binCount 1024    \
                    --Ar_energyHistogram.minEnergy 0 --Ar_energyHistogram.maxEnergy 250"

# file I/O
TBG_hdf5="--hdf5.period 1000"

TBG_plugins="!TBG_eth_histogram !TBG_ehot_histogram \
             !TBG_hdf5"


#################################
## Section: Program Parameters ##
#################################

TBG_devices="-d !TBG_gpu_x !TBG_gpu_y !TBG_gpu_z"

TBG_programParams="!TBG_devices      \
                   !TBG_gridSize     \
                   !TBG_steps        \
                   !TBG_period       \
                   !TBG_plugins"

# TOTAL number of GPUs
TBG_tasks="$(( TBG_gpu_x * TBG_gpu_y * TBG_gpu_z ))"

"$TBG_cfgPath"/submitAction.sh
